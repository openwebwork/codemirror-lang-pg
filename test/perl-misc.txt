# mixed operations

!$user_authen_module || $user_authen_module == 3;
my $var = { expires  => time + 2, valid => 0 };
my $var = Package->method($var);
warn $_ for grep { $_ ne 'a' } @array;
my @array = (pi / 6, pi / 4, pi / 3);
;

==>

Program(
    ExpressionStatement(
        BinaryExpression(
            UnaryExpression(LogicOp, ScalarVariable),
            LogicOp,
            BinaryExpression(ScalarVariable, CompareOp, Integer)
        ),
        StatementEnd(";")
    ),
    ExpressionStatement(
        Assignment(
            VariableDeclaration(my, ScalarVariable),
            "=",
            HashRef(
                "{",
                Pair(Identifier, FatComma, BinaryExpression(NoArgumentNamedUnaryOperator(time), ArithOp, Integer)),
                Comma,
                Pair(Identifier, FatComma, Integer),
               "}"
            )
        ),
        StatementEnd(";")
    ),
    ExpressionStatement(
        Assignment(
            VariableDeclaration(my, ScalarVariable),
            "=",
            MethodInvocation(
                PackageName(Identifier),
                ArrowOperator,
                FunctionName(Identifier),
                ParenthesizedArguments("(", ScalarVariable, ")")
            )
        ),
        StatementEnd(";")
    ),
    SingleLineStatement(
        ListOperatorExpression(ListOperator, Arguments(ScalarVariable)),
        for,
        Arguments(
            ArrayFunction(
                grep,
                Block("{", ExpressionStatement(BinaryExpression(ScalarVariable, ne, StringSingleQuoted)), "}"),
                ArrayVariable
            )
        ),
        StatementEnd(";")
    ),
    ExpressionStatement(
        Assignment(
            VariableDeclaration(my, ArrayVariable),
            "=",
            List(
                "(",
                BinaryExpression(Constant(Identifier), "/", Integer),
                Comma,
                BinaryExpression(Constant(Identifier), "/", Integer),
                Comma,
                BinaryExpression(Constant(Identifier), "/", Integer),
                ")"
            )
        ),
        StatementEnd(";")
    ),
    EmptyStatement(";")
)
